// // <auto-generated />
// using System;
// using Microsoft.EntityFrameworkCore;
// using Microsoft.EntityFrameworkCore.Infrastructure;
// using Microsoft.EntityFrameworkCore.Migrations;
// using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
// using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
//
// #nullable disable
//
// namespace blog_api.Migrations
// {
//     [DbContext(typeof(DataContext))]
//     [Migration("20241127120005_Community")]
//     partial class Community
//     {
//         /// <inheritdoc />
//         protected override void BuildTargetModel(ModelBuilder modelBuilder)
//         {
// #pragma warning disable 612, 618
//             modelBuilder
//                 .HasAnnotation("ProductVersion", "9.0.0")
//                 .HasAnnotation("Relational:MaxIdentifierLength", 63);
//
//             NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);
//             
//             modelBuilder.Entity("Community", b =>
//                 {
//                     b.Property<Guid>("Id")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uuid");
//
//                     b.Property<DateTime>("CreateTime")
//                         .HasColumnType("timestamp with time zone");
//
//                     b.Property<string>("Description")
//                         .HasColumnType("text");
//
//                     b.Property<bool>("IsClosed")
//                         .HasColumnType("boolean");
//
//                     b.Property<string>("Name")
//                         .IsRequired()
//                         .HasMaxLength(1000)
//                         .HasColumnType("character varying(1000)");
//
//                     b.Property<int>("SubscribersCount")
//                         .HasColumnType("integer");
//
//                     b.Property<Guid?>("UserId")
//                         .HasColumnType("uuid");
//
//                     b.HasKey("Id");
//
//                     b.HasIndex("UserId");
//
//                     b.ToTable("Community");
//                 });
//
//             modelBuilder.Entity("Post", b =>
//                 {
//                     b.Property<Guid>("Id")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uuid");
//
//                     b.Property<Guid?>("AddressId")
//                         .HasColumnType("uuid");
//
//                     b.Property<string>("Author")
//                         .IsRequired()
//                         .HasMaxLength(1000)
//                         .HasColumnType("character varying(1000)");
//
//                     b.Property<Guid>("AuthorId")
//                         .HasColumnType("uuid");
//
//                     b.Property<int>("CommentsCount")
//                         .HasColumnType("integer");
//
//                     b.Property<Guid?>("CommunityId")
//                         .HasColumnType("uuid");
//
//                     b.Property<string>("CommunityName")
//                         .HasColumnType("text");
//
//                     b.Property<DateTime>("CreateTime")
//                         .HasColumnType("timestamp with time zone");
//
//                     b.Property<string>("Description")
//                         .IsRequired()
//                         .HasMaxLength(1000)
//                         .HasColumnType("character varying(1000)");
//
//                     b.Property<string>("Image")
//                         .HasColumnType("text");
//
//                     b.Property<int>("Likes")
//                         .HasColumnType("integer");
//
//                     b.Property<int>("ReadingTime")
//                         .HasColumnType("integer");
//
//                     b.Property<string>("Title")
//                         .IsRequired()
//                         .HasMaxLength(1000)
//                         .HasColumnType("character varying(1000)");
//
//                     b.HasKey("Id");
//
//                     b.ToTable("Post");
//                 });
//
//             modelBuilder.Entity("PostUser", b =>
//                 {
//                     b.Property<Guid>("LikedPostsId")
//                         .HasColumnType("uuid");
//
//                     b.Property<Guid>("LikedUsersId")
//                         .HasColumnType("uuid");
//
//                     b.HasKey("LikedPostsId", "LikedUsersId");
//
//                     b.HasIndex("LikedUsersId");
//
//                     b.ToTable("PostUser");
//                 });
//
//             modelBuilder.Entity("Tag", b =>
//                 {
//                     b.Property<Guid>("Id")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uuid");
//
//                     b.Property<DateTime>("CreateTime")
//                         .HasColumnType("timestamp with time zone");
//
//                     b.Property<string>("Name")
//                         .IsRequired()
//                         .HasMaxLength(1000)
//                         .HasColumnType("character varying(1000)");
//
//                     b.Property<Guid?>("PostId")
//                         .HasColumnType("uuid");
//
//                     b.HasKey("Id");
//
//                     b.HasIndex("PostId");
//
//                     b.ToTable("Tag");
//                 });
//
//            
//
//             modelBuilder.Entity("User", b =>
//                 {
//                     b.Property<Guid>("Id")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uuid");
//
//                     b.Property<DateTime?>("BirthDate")
//                         .HasColumnType("timestamp with time zone");
//
//                     b.Property<DateTime>("CreateTime")
//                         .HasColumnType("timestamp with time zone");
//
//                     b.Property<string>("Email")
//                         .IsRequired()
//                         .HasMaxLength(1000)
//                         .HasColumnType("character varying(1000)");
//
//                     b.Property<int>("Gender")
//                         .HasColumnType("integer");
//
//                     b.Property<string>("Name")
//                         .IsRequired()
//                         .HasMaxLength(1000)
//                         .HasColumnType("character varying(1000)");
//
//                     b.Property<string>("Password")
//                         .IsRequired()
//                         .HasMaxLength(1000)
//                         .HasColumnType("character varying(1000)");
//
//                     b.Property<string>("PhoneNumber")
//                         .HasColumnType("text");
//
//                     b.HasKey("Id");
//
//                     b.ToTable("User");
//                 });
//             
//             modelBuilder.Entity("Community", b =>
//                 {
//                     b.HasOne("User", null)
//                         .WithMany("AdminOfCommunities")
//                         .HasForeignKey("UserId");
//                 });
//
//             modelBuilder.Entity("PostUser", b =>
//                 {
//                     b.HasOne("Post", null)
//                         .WithMany()
//                         .HasForeignKey("LikedPostsId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();
//
//                     b.HasOne("User", null)
//                         .WithMany()
//                         .HasForeignKey("LikedUsersId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();
//                 });
//
//             modelBuilder.Entity("Tag", b =>
//                 {
//                     b.HasOne("Post", null)
//                         .WithMany("Tags")
//                         .HasForeignKey("PostId");
//                 });
//             
//             modelBuilder.Entity("Community", b =>
//                 {
//                     b.Navigation("Administrators");
//                 });
//
//             modelBuilder.Entity("Post", b =>
//                 {
//                     b.Navigation("Comments");
//
//                     b.Navigation("Tags");
//                 });
//
//             modelBuilder.Entity("User", b =>
//                 {
//                     b.Navigation("AdminOfCommunities");
//                 });
// #pragma warning restore 612, 618
//         }
//     }
// }
